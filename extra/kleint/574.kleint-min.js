!function(e,n){"object"==typeof exports&&"object"==typeof module?module.exports=n():"function"==typeof define&&define.amd?define([],n):"object"==typeof exports?exports.KConnector=n():e.KConnector=n()}(self,(()=>(()=>{"use strict";var e={};const n={newSession:function(e,n){n.Callback(e.Message.SessionId)},runVPods:function(e,n){var o=e.Message;o.Body.Containers.forEach((function(e){var t=new Worker("vPodLaunchers/".concat(e.Launcher,".js"));e.Image=o.Url+"/virtualpod/"+e.Image,n.Callback(e.Name,t),t.onmessage=n.Onmessage,t.postMessage({Type:"runVPods",Message:{Body:e,SessionId:o.SessionId,Url:o.Url}})}))},removeVPod:function(e,n){var o;null===(o=n.VPod)||void 0===o||o.terminate(),n.Callback(e.Name)},httpRequest:function(e,n){n.VPod.postMessage(e)},httpResponse:function(e,n){n.VPod.postMessage(e)}};var o={none:0,error:1,warn:2,info:3,debug:4,trace:5},t=function(){return t=Object.assign||function(e){for(var n,o=1,t=arguments.length;o<t;o++)for(var s in n=arguments[o])Object.prototype.hasOwnProperty.call(n,s)&&(e[s]=n[s]);return e},t.apply(this,arguments)},s=function(e,n,o){if(o||2===arguments.length)for(var t,s=0,r=n.length;s<r;s++)!t&&s in n||(t||(t=Array.prototype.slice.call(n,0,s)),t[s]=n[s]);return e.concat(t||Array.prototype.slice.call(n))},r=function(){function e(e){void 0===e&&(e="debug"),this.level=o[e]}return e.getInstance=function(n){return e.instance&&e.instance.level===o[n]||(e.instance=new e(n)),e.instance},e.prototype.log=function(e){for(var n=[],t=1;t<arguments.length;t++)n[t-1]=arguments[t];o[e]<=this.level&&console.log.apply(console,n)},e.instance=null,e}();function a(e,n){var o=function(e,n,o){if(!function(e){return/(?:https?|vpod):\/\/(\w+:?\w*)?(\S+)(:\d+)?(\/|\/([\w#!:.?+=&%!\-\/]))?/.test(e)}(e))throw new Error("[Kleint-Connector] URL is not valid: "+e);var t=new URL(e),r=t.protocol.slice(0,-1);"vpod"===r&&(e=e.replace("vpod://","http://"),t=new URL(e));var a=t.hostname,i=(t.pathname.startsWith("/")?t.pathname.slice(1):t.pathname).split("/"),c=i.splice(0,1)[0],l=Array.from(t.searchParams.keys()).map((function(e){return"".concat(e,"=").concat(t.searchParams.get(e))}));return l=s(s([],l,!0),i.map((function(e,n){return"".concat(n,"=").concat(e)})),!0),n&&l.push("requestId=".concat(n)),o&&l.push("sessionId=".concat(o)),{protocol:r,destination:a,path:c,params:l}}(e.Url),r=o.protocol,a=o.destination,i=o.path,c=o.params;return t(t({},e),{RequestId:e.RequestId,SessionId:n,Protocol:r,Destination:a,Path:i,Params:c})}function i(e,n){for(var o in e)if(o.toLowerCase()===n.toLowerCase())return e[o]}var c,l=null,d={},u=null,p="",h={init:function(e){(u=new f(e.Debug)).initialize(e.GatewayURL,e.SessionName)},httpRequest:function(e){u&&u.handleMessage(e)},httpResponse:function(e){u&&u.handleMessage(e)},close:function(){u&&u.closeConnection()}};onmessage=function(e){c&&c.log("debug","[Kleint-Connector] Message received from the main thread:",e.data);var n=e.data.Type;h[n](e.data)};var f=function(){function e(e){void 0===e&&(e="debug"),this.sessionId="",c=r.getInstance(e)}return e.prototype.initialize=function(e,n){var o=this;p=e,(l=new WebSocket("ws://".concat(p,"/websocket/").concat(n))).onopen=function(){c.log("debug","[Kleint-Connector] WebSocket connection opened")},l.onmessage=function(e){var n=JSON.parse(e.data);c.log("debug","[Kleint-Connector] Message received from the server:",n),o.handleMessage(n)},l.onclose=function(e){c.log("debug","[Kleint-Connector] WebSocket connection closed:",e.code,e.reason)},l.onerror=function(e){c.log("error","[Kleint-Connector] WebSocket error:",e)}},e.prototype.handleMessage=function(e){var o,t,s,r,l=e.Type,u={Callback:function(){}};switch(l){case"httpRequest":if(e.Message=a(e.Message,this.sessionId),s=(t=e.Message).Destination,r=null!==(o=i(t.Headers,"X-Kleint-Session-Destination"))&&void 0!==o?o:this.sessionId,!d.hasOwnProperty(s)||r!==this.sessionId)return r===this.sessionId&&"vpod"===t.Protocol&&"main"===t.Destination?void self.postMessage(e):void c.log("error","[Kleint-Connector] VPod ".concat(s," not found"));u.VPod=d[s];break;case"httpResponse":if(s=(t=e.Message).Destination,!d.hasOwnProperty(s))return void c.log("error","[Kleint-Connector] VPod ".concat(s," not found"));u.VPod=d[s];break;case"runVPods":(t=e.Message).Url="http://"+p,t.SessionId=this.sessionId,u.Callback=this.addVPod.bind(this),u.Onmessage=this.handleMessageFromVPod.bind(this);break;case"removeVPod":u.Callback=this.removeVPod.bind(this);break;case"newSession":u.Callback=this.setSessionId.bind(this);break;default:return void c.log("error","[Kleint-Connector] Invalid message type")}n[l](e,u)},e.prototype.addVPod=function(e,n){d.hasOwnProperty(e)?c.log("error","[Kleint-Connector] VPod ".concat(e," already exists")):d[e]=n},e.prototype.removeVPod=function(e){d.hasOwnProperty(e)?delete d[e]:c.log("warn","[Kleint-Connector] VPod ".concat(e," does not exist"))},e.prototype.sendMessageToSConnector=function(e){l&&l.readyState===WebSocket.OPEN?(c.log("trace","[Kleint-Connector] Sending message to the server:",e),l.send(JSON.stringify(e))):c.log("error","[Kleint-Connector] WebSocket connection not available or closed")},e.prototype.handleMessageFromVPod=function(e){if(u){var n=e.data;switch(c.log("trace","[Kleint-Connector] Message received from the VPod: ",n),n.Type){case"httpResponse":if(this.checkInternalHttpRequest(n))return this.handleMessage(n);if(!n.Message.Destination)return void self.postMessage(n);break;case"httpRequest":if(this.checkInternalHttpRequest(n))return this.handleMessage(n)}n.Message.Params={},u.sendMessageToSConnector(n)}},e.prototype.checkInternalHttpRequest=function(e){var n,o=e.Message;if(o.Destination){var t=o.Destination,s=null!==(n=i(o.Headers,"X-Kleint-Session-Destination"))&&void 0!==n?n:this.sessionId;if(t in d&&s===this.sessionId)return c.log("debug","[Kleint-Connector] Shortcut to",t,e),!0;if(s===this.sessionId&&"vpod"===o.Protocol&&"main"===o.Destination)return c.log("trace","[Kleint-Connector] Shortcut to main",e),!0}return!1},e.prototype.setSessionId=function(e){this.sessionId=e,c.log("debug","[Kleint-Connector] New session established - ID:",this.sessionId)},e.prototype.closeConnection=function(){l&&(c.log("debug","[Kleint-Connector] Closing WebSocket connection"),l.close())},e}();return e=e.default})()));